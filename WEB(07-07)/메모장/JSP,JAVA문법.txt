ROOT 안에 WEB-IMF 안에 classes 안에 com 안에 dto and dao 만들기 (mkdir)
dto and dao 안에 자바 파일 넣기

index.jsp 안에 무조건 이 3개 추가하자
<%@ include file = "header.jsp"%> // <- 상단 클릭 바
<%@ include file = "main.jsp"%> //  <- 중단 내용
<%@ include file = "footer.jsp"%> // <- 하단 내용

--------------------------------------------------------------------------------------------------------

JSP 기본 문법

jsp 페이지 있으면 무조건 만들어라

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import = "java.util.ArrayList"%>
<%@ page import = "com.dto.MemberVo"%>

<jsp:useBean id="" class="" scope="" />
<jsp:setProperty name="" property="" value="" />
<jsp:getProperty name="" property="" value="" />

<%
    request.setCharacterEncoding("utf-8");
    String 변수명 =  request.getParameter("");
%>

--------------------------------------------------------------------------------------------------------

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ include file = "../header.jsp" %>
<div class="container">
  <h3>intro > profile </h3>
  <p>
    이름 : 김지성 <br>
          
  </p>
</div>
<%@ include file = "../footer.jsp" %>

--------------------------------------------------------------------------------------------------------

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ include file = "../header.jsp" %>

<%@ include file = "../footer.jsp" %>

--------------------------------------------------------------------------------------------------------

<jsp:userBean id="" class="" scope="" /> ***존나 중요 *** java의 객체를 만드는 것과 같다

↑ id = 객체 이름 / class = jsp에서 사용할  자바 클래스 / scope = page


스크립 틀릿 : 자바 로직 코드를 작성할때 사용
<%
%>


// 로그인 툴
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<jsp:useBean id ="login" class="com.dto.LoginVO" scope="page" />

<%
    request.setCharacterEncoding("utf-8");
    String username =  request.getParameter("username");
    String password =  request.getParameter("password");
    String chkUsername = "";
    String chkPassword = "";

    out.println(username);
    out.println(password);

    chkUsername = login.getUsername();
    chkPassword = login.getPassword();

    out.println(chkUsername);
    out.println(chkPassword);

    if(username.equals(chkUsername)&&password.equals(chkPassword)){
        out.println("로그인 완");
    }else{
        out.println("오류 다시");
    }
%>


jsp 내장 객체
request html > request.getParameter();
response 

반복문 사용 예시
<% for (int i=0; i<10; i++) {%>

<%
}
%>

--------------------------------------------------------------------------------------------------------
JAVA 기본 문법

자바 기본 폼

// 너는 모르겠어
package ;
import java.io.Serializable;

public class LoginVO implements java.io.Serializable{}



*** dto *** //
set,get 처리만 해주는 공간
------------------------------------------------------------------------------------
*** dao *** // 실질적인 데이터 처리를 해주는 공간

그냥 무조건 적어놔
package com.dao; // 변경사항 있을 수 있음

import java.util.ArrayList;
import com.dto.파일명;
----------------------------

*** ArrayList ***
지네릭스 : 다양한 타입의 객체들을 다루는 메서드나 컬렉션 클래스에 컴파일 시의 타입체크를 해주는 기능
class Box <B>