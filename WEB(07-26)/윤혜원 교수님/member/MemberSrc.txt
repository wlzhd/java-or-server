package member;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.ArrayList;

public class MemberSrc {
	
	//INSERT
	public static int insertMember(MemberVO mvo) {
		//1. DB연결 접속 정보
		Connection conn = DBConnection.getConnection();
		int result = 0;
		try {
		//2. DB연결 통로
		Statement stmt = conn.createStatement();
		// 3. 쿼리문 작성
		String query = "INSERT INTO MEMBERTABLE VALUES("
					+ "'"+mvo.getName()+"',"
					+ "'"+mvo.getId()+"',"
					+ "'"+mvo.getPass()+"',"
					+ "'"+mvo.getPhone()+"',"
					+ "'"+mvo.getBirth()+"',"
					+ "'"+mvo.getAddr()+"',"
					+ "'"+mvo.getGender()+"',"
					+ "'"+mvo.getEmail()+"')";
		result = stmt.executeUpdate(query);
		System.out.println("query >> " + query);
		} // END OF TRY
		catch(SQLException e) {
			System.out.println("DB오류 : " + e);
		} // END OF CATCH
		return result;
	}
	
	public static int deleteMember(String name) {
		//1. DB연결 접속 정보
		Connection conn = DBConnection.getConnection();
		int result = 0;
		try {
			//2. DB연결 통로
			Statement stmt = conn.createStatement();
			//3. 쿼리문 작성
			String query = "delete from membertable where name ='"+name+"'";
			System.out.println("query >> " + query);
			result = stmt.executeUpdate(query);
			} // END OF TRY
			catch(SQLException e) {
				System.out.println("DB오류 : " + e);
			} // END OF CATCH
			return result;
	}
	
	public static int updateMember(MemberVO mvo) {
		System.out.println("mvo >>" + mvo);	
		// 1. DB 연결
		Connection conn = DBConnection.getConnection();
		
		int result = 0;
		
		try {
			//2. DB연결 통로
			Statement stmt = conn.createStatement();
			//3. 쿼리문 작성
			String query = "update membertable set "
							+ "name = '"+mvo.getName()+"', "
							+ "pw ='"+mvo.getPass()+"', "
							+ "phone ='"+mvo.getPhone()+"', "
							+ "birth ='"+mvo.getBirth()+"', "
							+ "addr ='"+mvo.getAddr()+"', "
							+ "gender ='"+mvo.getGender()+"', "
							+ "email ='"+mvo.getEmail()+"' "
							+ "where"
							+ "			id='"+mvo.getId()+"'";
			result = stmt.executeUpdate(query);
			} // END OF TRY
			catch(SQLException e) {
				System.out.println("DB오류 : " + e);
			} // END OF CATCH
			return result;
		}
	
	public static ArrayList<MemberVO> selectMember() {
		
		// 1. DB 연결
		Connection conn = DBConnection.getConnection();
		
		ArrayList<MemberVO> m_arr = new ArrayList<MemberVO>();
		
		try {
			//2. DB연결 통로
			Statement stmt = conn.createStatement();
			//3. 쿼리문 작성
			String query = "select * from membertable";
			
			ResultSet rs = stmt.executeQuery(query); // <- SELECTMEMBER 은 QUERY 사용한다	
			System.out.println("rs >> " + rs);
		
			
			while(rs.next()) {
				String name = rs.getString("name"); // name 조회해줘
				String id = rs.getString("id"); //"" <- 여기에 들어가는 친구는 db테이블을 기준으로 한다
				String pass = rs.getString("pw");
				String phone = rs.getString("phone"); 
				String birth = rs.getString("birth"); 
				String gender= rs.getString("gender");
				String email= rs.getString("email");
				
				MemberVO mvo = new MemberVO(name, id, pass, phone, birth, birth, gender, email);
				m_arr.add(mvo);
				
			}
			System.out.println(m_arr);
		}catch(SQLException e) {
			System.out.println("DB >> " + e);
		}
		return m_arr;
	} // END OF TRY
	
	public static ArrayList<MemberVO> selectMember1(String name) {
		Connection conn = DBConnection.getConnection();
		
		ArrayList<MemberVO> m_arr = new ArrayList<MemberVO>();
		
		try {
			//2. DB연결 통로
			Statement stmt = conn.createStatement();
			//3. 쿼리문 작성
			String query = "select * from membertable where name ='" + name + "'";
			ResultSet ar = stmt.executeQuery(query); // <- SELECTMEMBER 은 QUERY 사용한다	
				
			while(ar.next()) {
				String id = ar.getString("id"); //"" <- 여기에 들어가는 친구는 db테이블을 기준으로 한다
				String pass = ar.getString("pw");
				String phone = ar.getString("phone"); 
				String birth = ar.getString("birth"); 
				String gender= ar.getString("gender");
				String email= ar.getString("email");
				
				MemberVO mvo = new MemberVO(name, id, pass, phone, birth, birth, gender, email);
				m_arr.add(mvo);
			}
		}catch(SQLException e) {
			System.out.println("DB >> " + e);
		}
		return m_arr;
	} // END OF TRY
	
	public static void main (String args[]) {

		Scanner scan = new Scanner(System.in); 
		int flag = 0;
		
		while(flag!=6) {
		
		System.out.println("======================회원관리======================");
		System.out.println("1. 회원가입   2.회원출력\n"
				+ "3. 회원삭제   4. 회원수정   5. 상세조회   6. 종료");
		flag = scan.nextInt(); // 사용자 입력 뭐할건지
		
		if(flag == 1) { // 사용자가 1눌렀을때
			
		String name = "";
		String id = "";
		String pass = "";
		String phone = "";
		String birth = "";
		String addr = "";
		String gender = "";
		String email = "";
		
		System.out.println("회원정보 입력 ↓");
		System.out.println("이름 입력 : ");
		name=scan.next();
		System.out.println("아이디 입력 : ");
		id=scan.next();
		System.out.println("비밀번호 입력 : ");
		pass=scan.next();
		System.out.println("전화번호 입력 : ");
		phone=scan.next();
		System.out.println("생년월일 입력 : ");
		birth=scan.next();
		System.out.println("주소 입력 : ");
		addr=scan.next();
		System.out.println("성별 입력 : ");
		gender=scan.next();
		System.out.println("이메일 입력 : ");
		email=scan.next();
		
		MemberVO mvo = new MemberVO(name, id, pass, phone, birth, addr, gender, email);
		int result = MemberSrc.insertMember(mvo);
		
		if(result == 1) {
			System.out.println("회원가입이 완료되었습니다");
		} else {
			System.out.println("오류가 발생했습니다");
		} // END OF IF
		
		}else if (flag == 2) {
			System.out.println("회원조회");
			ArrayList<MemberVO> m_arr = MemberSrc.selectMember();
			
			for(int i = 0; i < m_arr.size(); i++) {
				
				MemberVO mvo = m_arr.get(i);
				
				String name = mvo.getName();
				String id = mvo.getId();
				String pass = mvo.getPass();
				String phone = mvo.getPhone();
				String birth = mvo.getBirth();
				String gender = mvo.getGender();
				String email = mvo.getEmail();
				System.out.println("name >> " + name + " / ID >> " + id + " / PASS >> " + pass
									+ " / phone >> " + phone + " / birth >> " + birth
									+ " / gender >> " + gender + " / email >> " + email);
			}
			
		}else if (flag == 3) {
			System.out.println("회원삭제");
			System.out.println("삭제할 회원의 이름을 입력하세요");
			String name = scan.next();
			
			int result = MemberSrc.deleteMember(name);
			
			if(result == 1) {
				System.out.println("삭제가 완료되었습니다");
			} else {
				System.out.println("오류발생");
			} 
				
			} else if (flag==4) {
				System.out.println("회원수정");
				System.out.println("수정할 회원의 아이디를 입력하세요");
				String id = scan.next();
				
				String name = "";
				String pass = "";
				String phone = "";
				String birth = "";
				String addr = "";
				String gender = "";
				String email = "";
				
				System.out.println("이름 입력 : ");
				name=scan.next();
				System.out.println("비밀번호 입력 : ");
				pass=scan.next();
				System.out.println("전화번호 입력 : ");
				phone=scan.next();
				System.out.println("생년월일 입력 : ");
				birth=scan.next();
				System.out.println("주소 입력 : ");
				addr=scan.next();
				System.out.println("성별 입력 : ");
				gender=scan.next();
				System.out.println("이메일 입력 : ");
				email=scan.next();
				
				MemberVO mvo = new MemberVO(name, id, pass, phone, birth, addr, gender, email);
				
				int result = MemberSrc.updateMember(mvo);
				System.out.println(result);

			} else if(flag == 5) {

				System.out.println("상세조회");
				System.out.println("조회할 이름을 입력하시오");
				
				String name=scan.next();
				
				MemberSrc.selectMember1(name);
				
				ArrayList<MemberVO> m_arr = MemberSrc.selectMember1(name);
				
				for(int i = 0; i < m_arr.size(); i++) {
					
					MemberVO mvo = m_arr.get(i);
					
					String id = mvo.getId();
					String pass = mvo.getPass();
					String phone = mvo.getPhone();
					String birth = mvo.getBirth();
					String gender = mvo.getGender();
					String email = mvo.getEmail();
					System.out.println("name >> " + name + " / ID >> " + id + " / PASS >> " + pass
										+ " / phone >> " + phone + " / birth >> " + birth
										+ " / gender >> " + gender + " / email >> " + email);
				}
			}
		} // END OF WHILE
				
	} // END OF MAIN
} // END OF CLASS(MemberSrc)