src/main/java 안에
kr.jeonjucom.controller안에
BoardController.java 만들기

페이지 연결을 추가하고싶으면 [BoardController] 파일에 경로만 추가 해 주자

*** 데이터를 담아서 보내주는 기능 [model] ***

[BoardController]

package kr.jeonjucom.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import lombok.extern.log4j.Log4j;

@Controller
@RequestMapping("/board/*")
@Log4j
public class BoardController {
	
	// 현재 시간을 벨류에 담아서 보냄
	@GetMapping("/list")
	public void list(Model model) {
		model.addAttribute("values",new java.util.Date());
		log.info("/board/list");
	}

	@GetMapping("/get")		// 복붙 수정
	public void get() {			// 복붙 수정
		log.info("/board/get");	// 복붙 수정
	}				// 복붙
}
---------------------------------------------------------------------------------------
src/test/java 안에
kr.jeonjucom.comtroller 안에
BoardControllerTests.java 만들기

[BoardControllerTests]

package kr.jeonjucom.controller;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;
import lombok.Setter;
import lombok.extern.log4j.Log4j;

@WebAppConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration("file:src/main/webapp/WEB-INF/spring/root-context.xml")
@Log4j
public class BoardControllerTests {
   @Setter(onMethod_ = {@Autowired})
   private WebApplicationContext ctx;
   private MockMvc mockMvc;
   
   @Before
   public void setup() {
      this.mockMvc = MockMvcBuilders.webAppContextSetup(ctx).build();
   }
   
   @Test
   public void testList() throws Exception{
      log.info(mockMvc.perform(MockMvcRequestBuilders.get("/board/list"))
      .andReturn());
      
      
      /*log.info(mockMvc.perform(MockMvcRequestBuilders.get("/board/list"))
      .andReturn()
      .getModelAndView()
      .getModelMap());*/
      
   }
}